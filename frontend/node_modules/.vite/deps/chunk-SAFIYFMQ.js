import {
  propsFactory
} from "./chunk-LM4E4B67.js";
import {
  computed,
  ref,
  watch
} from "./chunk-DNXM2JDJ.js";
import {
  init_define_process_env
} from "./chunk-PWHOG2Q4.js";

// node_modules/vuetify/lib/composables/lazy.mjs
init_define_process_env();
var makeLazyProps = propsFactory({
  eager: Boolean
}, "lazy");
function useLazy(props, active) {
  const isBooted = ref(false);
  const hasContent = computed(() => isBooted.value || props.eager || active.value);
  watch(active, () => isBooted.value = true);
  function onAfterLeave() {
    if (!props.eager)
      isBooted.value = false;
  }
  return {
    isBooted,
    hasContent,
    onAfterLeave
  };
}

export {
  makeLazyProps,
  useLazy
};
//# sourceMappingURL=chunk-SAFIYFMQ.js.map
