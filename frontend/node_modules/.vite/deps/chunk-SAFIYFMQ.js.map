{
  "version": 3,
  "sources": ["../../vuetify/src/composables/lazy.ts"],
  "sourcesContent": ["// Utilities\nimport { computed, ref, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport { propsFactory } from '@/util'\n\nexport const makeLazyProps = propsFactory({\n  eager: Boolean,\n}, 'lazy')\n\nexport function useLazy (props: { eager: boolean }, active: Ref<boolean>) {\n  const isBooted = ref(false)\n  const hasContent = computed(() => isBooted.value || props.eager || active.value)\n\n  watch(active, () => isBooted.value = true)\n\n  function onAfterLeave () {\n    if (!props.eager) isBooted.value = false\n  }\n\n  return { isBooted, hasContent, onAfterLeave }\n}\n"],
  "mappings": ";;;;;;;;;;;;;AAAA;AAOO,IAAM,gBAAgB,aAAa;EACxC,OAAO;AADiC,GAEvC,MAFsC;AAIlC,iBAAkB,OAA2B,QAAsB;AACxE,QAAM,WAAW,IAAI,KAAD;AACpB,QAAM,aAAa,SAAS,MAAM,SAAS,SAAS,MAAM,SAAS,OAAO,KAA/C;AAE3B,QAAM,QAAQ,MAAM,SAAS,QAAQ,IAAhC;AAEL,0BAAyB;AACvB,QAAI,CAAC,MAAM;AAAO,eAAS,QAAQ;EACpC;AAED,SAAO;IAAE;IAAU;IAAY;EAAxB;AACR;",
  "names": []
}
