{
  "version": 3,
  "sources": ["dep:vuetify_lib_components_VAppBar_index_mjs", "../../vuetify/src/components/VAppBar/VAppBar.tsx", "../../vuetify/src/components/VToolbar/VToolbar.tsx", "../../vuetify/src/components/VToolbar/VToolbarTitle.tsx", "../../vuetify/src/components/VAppBar/VAppBarNavIcon.tsx", "../../vuetify/src/components/VToolbar/VToolbarItems.tsx", "../../vuetify/src/components/VAppBar/VAppBarTitle.tsx"],
  "sourcesContent": ["\nexport * from \"./node_modules/vuetify/lib/components/VAppBar/index.mjs\"", "// Styles\nimport './VAppBar.sass'\n\n// Components\nimport { filterToolbarProps, makeVToolbarProps, VToolbar } from '@/components/VToolbar/VToolbar'\n\n// Composables\nimport { makeLayoutItemProps, useLayoutItem } from '@/composables/layout'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, ref, toRef } from 'vue'\nimport { defineComponent } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VAppBar = defineComponent({\n  name: 'VAppBar',\n\n  props: {\n    // TODO: Implement scrolling techniques\n    // hideOnScroll: Boolean\n    // invertedScroll: Boolean\n    // collapseOnScroll: Boolean\n    // elevateOnScroll: Boolean\n    // shrinkOnScroll: Boolean\n    // fadeImageOnScroll: Boolean\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n    position: {\n      type: String as PropType<'top' | 'bottom'>,\n      default: 'top',\n      validator: (value: any) => ['top', 'bottom'].includes(value),\n    },\n\n    ...makeVToolbarProps(),\n    ...makeLayoutItemProps(),\n\n    height: {\n      type: [Number, String],\n      default: 64,\n    },\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const vToolbarRef = ref()\n    const isActive = useProxiedModel(props, 'modelValue')\n    const height = computed(() => {\n      const height: number = vToolbarRef.value?.contentHeight ?? 0\n      const extensionHeight: number = vToolbarRef.value?.extensionHeight ?? 0\n\n      return (height + extensionHeight)\n    })\n    const { layoutItemStyles } = useLayoutItem({\n      id: props.name,\n      priority: computed(() => parseInt(props.priority, 10)),\n      position: toRef(props, 'position'),\n      layoutSize: height,\n      elementSize: height,\n      active: isActive,\n      absolute: toRef(props, 'absolute'),\n    })\n\n    return () => {\n      const [toolbarProps] = filterToolbarProps(props)\n\n      return (\n        <VToolbar\n          ref={ vToolbarRef }\n          class={[\n            'v-app-bar',\n            {\n              'v-app-bar--bottom': props.position === 'bottom',\n            },\n          ]}\n          style={{\n            ...layoutItemStyles.value,\n            height: undefined,\n          }}\n          { ...toolbarProps }\n          v-slots={ slots }\n        />\n      )\n    }\n  },\n})\n\nexport type VAppBar = InstanceType<typeof VAppBar>\n", "// Styles\nimport './VToolbar.sass'\n\n// Components\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VImg } from '@/components/VImg'\nimport { VToolbarTitle } from './VToolbarTitle'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useForwardRef } from '@/composables/forwardRef'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, genericComponent, pick, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { MakeSlots } from '@/util'\nimport type { ExtractPropTypes, PropType } from 'vue'\nimport { provideDefaults } from '@/composables/defaults'\n\nexport type Density = typeof allowedDensities[number]\n\nconst allowedDensities = [null, 'prominent', 'default', 'comfortable', 'compact'] as const\n\nexport const makeVToolbarProps = propsFactory({\n  absolute: Boolean,\n  collapse: Boolean,\n  color: String,\n  density: {\n    type: String as PropType<Density>,\n    default: 'default',\n    validator: (v: any) => allowedDensities.includes(v),\n  },\n  extended: Boolean,\n  extensionHeight: {\n    type: [Number, String],\n    default: 48,\n  },\n  flat: Boolean,\n  floating: Boolean,\n  height: {\n    type: [Number, String],\n    default: 56,\n  },\n  image: String,\n  title: String,\n\n  ...makeBorderProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({ tag: 'header' }),\n  ...makeThemeProps(),\n}, 'v-toolbar')\n\nexport const VToolbar = genericComponent<new () => {\n  $slots: MakeSlots<{\n    default: []\n    image: [{ image: string }]\n    prepend: []\n    append: []\n    title: []\n    extension: []\n  }>\n}>()({\n  name: 'VToolbar',\n\n  props: makeVToolbarProps(),\n\n  setup (props, { slots }) {\n    const { borderClasses } = useBorder(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { themeClasses } = provideTheme(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const isExtended = computed(() => (!!(props.extended || slots.extension)))\n    const contentHeight = computed(() => parseInt((\n      Number(props.height) +\n      (props.density === 'prominent' ? Number(props.height) : 0) -\n      (props.density === 'comfortable' ? 8 : 0) -\n      (props.density === 'compact' ? 16 : 0)\n    ), 10))\n    const extensionHeight = computed(() => isExtended.value\n      ? parseInt((\n        Number(props.extensionHeight) +\n        (props.density === 'prominent' ? Number(props.extensionHeight) : 0) -\n        (props.density === 'comfortable' ? 4 : 0) -\n        (props.density === 'compact' ? 8 : 0)\n      ), 10)\n      : 0\n    )\n\n    provideDefaults({\n      VBtn: {\n        flat: true,\n        variant: 'text',\n      },\n    })\n\n    useRender(() => {\n      const hasTitle = !!(props.title || slots.title)\n      const hasImage = !!(slots.image || props.image)\n\n      return (\n        <props.tag\n          class={[\n            'v-toolbar',\n            {\n              'v-toolbar--absolute': props.absolute,\n              'v-toolbar--collapse': props.collapse,\n              'v-toolbar--flat': props.flat,\n              'v-toolbar--floating': props.floating,\n              [`v-toolbar--density-${props.density}`]: true,\n            },\n            backgroundColorClasses.value,\n            borderClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            themeClasses.value,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n          ]}\n        >\n          { hasImage && (\n            <div class=\"v-toolbar__image\">\n              <VDefaultsProvider\n                defaults={{\n                  VImg: {\n                    cover: true,\n                    src: props.image,\n                  },\n                }}\n                scoped\n              >\n                { slots.image ? slots.image?.() : (<VImg />) }\n              </VDefaultsProvider>\n            </div>\n          ) }\n\n          <div\n            class=\"v-toolbar__content\"\n            style={{ height: convertToUnit(contentHeight.value) }}\n          >\n            { slots.prepend && (\n              <div class=\"v-toolbar__prepend\">\n                { slots.prepend?.() }\n              </div>\n            ) }\n\n            { hasTitle && (\n              <VToolbarTitle text={ props.title }>\n                {{ text: slots.title }}\n              </VToolbarTitle>\n            ) }\n\n            { slots.default?.() }\n\n            { slots.append && (\n              <div class=\"v-toolbar__append\">\n                { slots.append?.() }\n              </div>\n            ) }\n          </div>\n\n          { isExtended.value && (\n            <div\n              class=\"v-toolbar__extension\"\n              style={{ height: convertToUnit(extensionHeight.value) }}\n            >\n              { slots.extension?.() }\n            </div>\n          ) }\n        </props.tag>\n      )\n    })\n\n    return useForwardRef({\n      contentHeight,\n      extensionHeight,\n    })\n  },\n})\n\nexport type VToolbar = InstanceType<typeof VToolbar>\n\nexport function filterToolbarProps (props: ExtractPropTypes<ReturnType<typeof makeVToolbarProps>>) {\n  return pick(props, Object.keys(VToolbar?.props ?? {}) as any)\n}\n", "// Composables\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { MakeSlots } from '@/util'\n\nexport const VToolbarTitle = genericComponent<new () => {\n  $slots: MakeSlots<{\n    default: []\n    text: []\n  }>\n}>()({\n  name: 'VToolbarTitle',\n\n  props: {\n    text: String,\n\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    useRender(() => {\n      const hasText = !!(slots.default || slots.text || props.text)\n\n      return (\n        <props.tag class=\"v-toolbar-title\">\n          { hasText && (\n            <div class=\"v-toolbar-title__placeholder\">\n              { slots.text ? slots.text() : props.text }\n\n              { slots.default?.() }\n            </div>\n          ) }\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VToolbarTitle = InstanceType<typeof VToolbarTitle>\n", "// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Utilities\nimport { defineComponent } from '@/util'\n\nexport const VAppBarNavIcon = defineComponent({\n  name: 'VAppBarNavIcon',\n\n  props: {\n    icon: {\n      type: String,\n      default: '$menu',\n    },\n  },\n\n  setup (props, { slots }) {\n    return () => (\n      <VBtn class=\"v-app-bar-nav-icon\" icon={ props.icon }>\n        { slots.default?.() }\n      </VBtn>\n    )\n  },\n})\n", "// Composables\nimport { makeVariantProps } from '@/composables/variant'\nimport { provideDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { defineComponent } from '@/util'\nimport { toRef } from 'vue'\n\nexport const VToolbarItems = defineComponent({\n  name: 'VToolbarItems',\n\n  props: {\n    ...makeVariantProps({ variant: 'contained-text' }),\n  },\n\n  setup (props, { slots }) {\n    provideDefaults({\n      VBtn: {\n        color: toRef(props, 'color'),\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    return () => slots.default?.()\n  },\n})\n\nexport type VToolbarItems = InstanceType<typeof VToolbarItems>\n", "// Composables\nimport { VToolbarTitle } from '@/components/VToolbar'\n\n// Utilities\nimport { defineComponent } from '@/util'\n\nexport const VAppBarTitle = defineComponent({\n  ...VToolbarTitle,\n\n  name: 'VAppBarTitle',\n\n  setup (_, { slots }) {\n    return () => (\n      <VToolbarTitle\n        class=\"v-app-bar-title\"\n        v-slots={ slots }\n      />\n    )\n  },\n}) as typeof VToolbarTitle\n"],
  "mappings": "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",
  "names": []
}
