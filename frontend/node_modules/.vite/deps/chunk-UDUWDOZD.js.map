{
  "version": 3,
  "sources": ["../../vuetify/src/directives/intersect/index.ts"],
  "sourcesContent": ["// Utils\nimport { SUPPORTS_INTERSECTION } from '@/util'\n\n// Types\nimport type {\n  DirectiveBinding,\n  ObjectDirective,\n} from 'vue'\n\ntype ObserveHandler = (\n  isIntersecting: boolean,\n  entries: IntersectionObserverEntry[],\n  observer: IntersectionObserver,\n) => void\n\nexport interface ObserveDirectiveBinding extends Omit<DirectiveBinding, 'modifiers' | 'value'> {\n  value?: ObserveHandler | { handler: ObserveHandler, options?: IntersectionObserverInit }\n  modifiers: {\n    once?: boolean\n    quiet?: boolean\n  }\n}\n\nfunction mounted (el: HTMLElement, binding: ObserveDirectiveBinding) {\n  if (!SUPPORTS_INTERSECTION) return\n\n  const modifiers = binding.modifiers || {}\n  const value = binding.value\n  const { handler, options } = typeof value === 'object'\n    ? value\n    : { handler: value, options: {} }\n\n  const observer = new IntersectionObserver((\n    entries: IntersectionObserverEntry[] = [],\n    observer: IntersectionObserver\n  ) => {\n    const _observe = el._observe?.[binding.instance!.$.uid]\n    if (!_observe) return // Just in case, should never fire\n\n    const isIntersecting = entries.some(entry => entry.isIntersecting)\n\n    // If is not quiet or has already been\n    // initted, invoke the user callback\n    if (\n      handler && (\n        !modifiers.quiet ||\n        _observe.init\n      ) && (\n        !modifiers.once ||\n        isIntersecting ||\n        _observe.init\n      )\n    ) {\n      handler(isIntersecting, entries, observer)\n    }\n\n    if (isIntersecting && modifiers.once) unmounted(el, binding)\n    else _observe.init = true\n  }, options)\n\n  el._observe = Object(el._observe)\n  el._observe![binding.instance!.$.uid] = { init: false, observer }\n\n  observer.observe(el)\n}\n\nfunction unmounted (el: HTMLElement, binding: ObserveDirectiveBinding) {\n  const observe = el._observe?.[binding.instance!.$.uid]\n  if (!observe) return\n\n  observe.observer.unobserve(el)\n  delete el._observe![binding.instance!.$.uid]\n}\n\nexport const Intersect: ObjectDirective<HTMLElement> = {\n  mounted,\n  unmounted,\n}\n\nexport default Intersect\n"],
  "mappings": ";;;;;;;;AAAA;AAuBA,iBAAkB,IAAiB,SAAkC;AACnE,MAAI,CAAC;AAAuB;AAE5B,QAAM,YAAY,QAAQ,aAAa,CAAA;AACvC,QAAM,QAAQ,QAAQ;AACtB,QAAM;IAAE;IAAS;MAAY,OAAO,UAAU,WAC1C,QACA;IAAE,SAAS;IAAO,SAAS,CAAA;EAA3B;AAEJ,QAAM,WAAW,IAAI,qBAAqB,WAGrC;AAAA,QAAA;AAAA,QAFH,UAEG,UAAA,SAAA,KAAA,UAAA,OAAA,SAAA,UAAA,KAFoC,CAAA;AAEpC,QADH,YACG,UAAA,SAAA,IAAA,UAAA,KAAA;AACH,UAAM,WAAQ,gBAAG,GAAG,aAAN,OAAA,SAAG,aAAc,QAAQ,SAAU,EAAE;AACnD,QAAI,CAAC;AAAU;AAEf,UAAM,iBAAiB,QAAQ,KAAK,WAAS,MAAM,cAA5B;AAIvB,QACE,WACE,EAAC,UAAU,SACX,SAAS,SAET,EAAC,UAAU,QACX,kBACA,SAAS,OAEX;AACA,cAAQ,gBAAgB,SAAS,SAA1B;IACR;AAED,QAAI,kBAAkB,UAAU;AAAM,gBAAU,IAAI,OAAL;;AAC1C,eAAS,OAAO;EACtB,GAAE,OA1Bc;AA4BjB,KAAG,WAAW,OAAO,GAAG,QAAJ;AACpB,KAAG,SAAU,QAAQ,SAAU,EAAE,OAAO;IAAE,MAAM;IAAO;EAAf;AAExC,WAAS,QAAQ,EAAjB;AACD;AAED,mBAAoB,IAAiB,SAAkC;AAAA,MAAA;AACrE,QAAM,UAAO,iBAAG,GAAG,aAAN,OAAA,SAAG,cAAc,QAAQ,SAAU,EAAE;AAClD,MAAI,CAAC;AAAS;AAEd,UAAQ,SAAS,UAAU,EAA3B;AACA,SAAO,GAAG,SAAU,QAAQ,SAAU,EAAE;AACzC;AAEM,IAAM,YAA0C;EACrD;EACA;AAFqD;AAKvD,IAAA,oBAAe;",
  "names": []
}
