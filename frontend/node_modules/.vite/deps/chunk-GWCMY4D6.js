import {
  convertToUnit,
  getCurrentInstanceName,
  propsFactory
} from "./chunk-LM4E4B67.js";
import {
  computed
} from "./chunk-DNXM2JDJ.js";
import {
  init_define_process_env
} from "./chunk-PWHOG2Q4.js";

// node_modules/vuetify/lib/composables/position.mjs
init_define_process_env();
var positionValues = ["static", "relative", "fixed", "absolute", "sticky"];
var makePositionProps = propsFactory({
  absolute: Boolean,
  bottom: [Boolean, Number, String],
  fixed: Boolean,
  left: [Boolean, Number, String],
  position: {
    type: String,
    validator: (v) => positionValues.includes(v)
  },
  right: [Boolean, Number, String],
  top: [Boolean, Number, String]
}, "position");
function usePosition(props) {
  let name = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : getCurrentInstanceName();
  const targets = ["top", "right", "bottom", "left"];
  const positionClasses = computed(() => {
    if (props.fixed)
      return `${name}--fixed`;
    if (props.absolute)
      return `${name}--absolute`;
    return props.position ? `position-${props.position}` : void 0;
  });
  const positionStyles = computed(() => {
    const styles = {};
    for (const target of targets) {
      const prop = props[target];
      if (prop == null || prop === false)
        continue;
      styles[target] = convertToUnit(prop === true ? "0" : String(prop));
    }
    return styles;
  });
  return {
    positionClasses,
    positionStyles
  };
}

export {
  makePositionProps,
  usePosition
};
//# sourceMappingURL=chunk-GWCMY4D6.js.map
